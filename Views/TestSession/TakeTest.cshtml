@model TestMaster.ViewModels.TakeTestViewModel

@{
    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
    ViewData["Title"] = Model.Test.Title;
}

<!-- === CSS TÙY CHỈNH CHO GIAO DIỆN MỚI === -->
<style>
    .test-wrapper {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
    }

    .test-main-content {
        flex: 1;
        min-width: 60%;
    }

    .test-sidebar {
        width: 300px;
    }

    .sidebar-inner {
        position: sticky;
        top: 20px;
    }

    .question-palette {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(40px, 1fr));
        gap: 8px;
        max-height: 400px;
        overflow-y: auto;
        padding-right: 10px; /* For scrollbar */
    }

    .palette-item {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 40px;
        height: 40px;
        border: 1px solid #ddd;
        border-radius: 50%;
        cursor: pointer;
        font-weight: bold;
        transition: all 0.2s ease;
        background-color: #fff;
        color: #666;
    }

        .palette-item:hover {
            background-color: #f0f0f0;
            border-color: #4e73df;
        }

        /* Trạng thái câu hỏi */
        .palette-item.answered {
            background-color: #1cc88a; /* Green */
            color: #fff;
            border-color: #1cc88a;
        }

        .palette-item.marked {
            background-color: #f6c23e; /* Yellow */
            color: #fff;
            border-color: #f6c23e;
        }

        .palette-item.current {
            border-width: 2px;
            border-color: #4e73df; /* Blue */
            transform: scale(1.1);
        }

    .question-card {
        scroll-margin-top: 20px; /* Offset for sticky header */
    }
</style>

<div class="container-fluid mt-4">
    <form asp-controller="TestSession" asp-action="SubmitTest" method="post" id="testForm">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="SessionId" />

        <div class="test-wrapper">
            <!-- === CỘT NỘI DUNG CHÍNH (CÁC CÂU HỎI) === -->
            <div class="test-main-content">
                <div class="d-sm-flex align-items-center justify-content-between mb-4">
                    <h1 class="h3 mb-0 text-gray-800">@Model.Test.Title</h1>
                </div>

                @for (int i = 0; i < Model.Test.Questions.Count; i++)
                {
                    var question = Model.Test.Questions.ToList()[i];
                    <div class="card shadow-sm mb-3 question-card" id="question-card-@i">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h6 class="m-0 font-weight-bold text-primary">Câu @(i + 1): @question.Content</h6>
                            <div class="form-check">
                                <input class="form-check-input mark-review-cb" type="checkbox" value="" id="mark-@i" data-question-index="@i">
                                <label class="form-check-label" for="mark-@i">
                                    Đánh dấu
                                </label>
                            </div>
                        </div>
                        <div class="card-body">
                            <input type="hidden" name="UserAnswers[@i].QuestionId" value="@question.QuestionId" />

                            @if (question.QuestionType == "MCQ" || question.QuestionType == "TRUE_FALSE")
                            {
                                <ul class="list-group list-group-flush">
                                    @foreach (var option in question.AnswerOptions)
                                    {
                                        <li class="list-group-item">
                                            <div class="form-check">
                                                <input class="form-check-input answer-input" type="radio" name="UserAnswers[@i].ChosenOptionId" id="option-@option.OptionId" value="@option.OptionId" data-question-index="@i">
                                                <label class="form-check-label" for="option-@option.OptionId">
                                                    @option.OptionText
                                                </label>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            }
                            else if (question.QuestionType == "ESSAY")
                            {
                                <textarea name="UserAnswers[@i].AnswerText" class="form-control answer-input" rows="5" placeholder="Nhập câu trả lời của bạn..." data-question-index="@i"></textarea>
                            }
                        </div>
                    </div>
                }
            </div>

            <!-- === THANH ĐIỀU HƯỚNG BÊN PHẢI (STICKY) === -->
            <div class="test-sidebar">
                <div class="sidebar-inner">
                    <div class="card shadow">
                        <div class="card-body text-center">
                            <h5 class="text-danger mb-2">Thời gian còn lại</h5>
                            <h3 id="timer" class="font-weight-bold"></h3>
                            <button type="submit" class="btn btn-success btn-block mt-3" onclick="return confirm('Bạn có chắc chắn muốn nộp bài không?');">Nộp bài</button>
                        </div>
                        <div class="card-header">
                            <h6 class="m-0 font-weight-bold text-primary">Bảng câu hỏi</h6>
                        </div>
                        <div class="card-body">
                            <div class="question-palette">
                                @for (int i = 0; i < Model.Test.Questions.Count; i++)
                                {
                                    <a class="palette-item" data-target-id="question-card-@i" id="palette-item-@i">
                                        @(i + 1)
                                    </a>
                                }
                            </div>
                            <div class="mt-3">
                                <small><span class="badge badge-success">&nbsp;</span> Đã trả lời</small>
                                <small class="ms-2"><span class="badge badge-warning">&nbsp;</span> Đánh dấu</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // === LOGIC ĐỒNG HỒ ĐẾM NGƯỢC ===
            var timeRemaining = @Model.TimeRemainingInSeconds;
            var timerElement = document.getElementById('timer');
            var testForm = document.getElementById('testForm');

            function updateTimer() {
                if (timeRemaining <= 0) {
                    timerElement.textContent = "Hết giờ!";
                    if(testForm) {
                        testForm.removeAttribute('onsubmit');
                        testForm.submit();
                    }
                    clearInterval(timerInterval);
                    return;
                }
                var minutes = Math.floor(timeRemaining / 60);
                var seconds = Math.floor(timeRemaining % 60);
                timerElement.textContent = minutes.toString().padStart(2, '0') + ":" + seconds.toString().padStart(2, '0');
                timeRemaining--;
            }
            var timerInterval = setInterval(updateTimer, 1000);
            updateTimer();

            // === LOGIC BẢNG ĐIỀU HƯỚNG CÂU HỎI ===

            // 1. Nhảy đến câu hỏi khi click
            $('.palette-item').on('click', function(e) {
                e.preventDefault();
                var targetId = $(this).data('target-id');
                var targetElement = document.getElementById(targetId);
                if (targetElement) {
                    targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            });

            // 2. Cập nhật trạng thái "Đã trả lời"
            $('.answer-input').on('change input', function() {
                var questionIndex = $(this).data('question-index');
                $('#palette-item-' + questionIndex).addClass('answered');
            });

            // 3. Cập nhật trạng thái "Đánh dấu"
            $('.mark-review-cb').on('change', function() {
                var questionIndex = $(this).data('question-index');
                $('#palette-item-' + questionIndex).toggleClass('marked', $(this).is(':checked'));
            });

            // 4. Cập nhật trạng thái "Câu hiện tại" khi cuộn trang (dùng Intersection Observer)
            let observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    var questionIndex = entry.target.id.split('-')[2];
                    var paletteItem = $('#palette-item-' + questionIndex);

                    if (entry.isIntersecting) {
                        $('.palette-item').removeClass('current');
                        paletteItem.addClass('current');
                    }
                });
            }, { rootMargin: "-40% 0px -60% 0px" }); // Chỉ kích hoạt khi câu hỏi ở giữa màn hình

            $('.question-card').each(function() {
                observer.observe(this);
            });
        });
    </script>
}
